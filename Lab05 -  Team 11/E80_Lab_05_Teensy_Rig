%% Lab 5 Interface

% samplingFreq = 10E3; % Hz [100E3 max] % change
% numSamples = 1000; % the higher this is the longer sampling will take
% 
% bytesPerSample = 2; % DO NOT CHANGE
% micSignal = zeros(numSamples,1); % DO NOT CHANGE
% 
% % close and delete serial ports in case desired port is still open
% if ~isempty(instrfind)
%     fclose(instrfind);
%     delete(instrfind);
% end
% 
% % Modify first argument of serial to match Teensy port under Tools tab of Arduino IDE.  Second to match baud rate.
% % Note that the timeout is set to 60 to accommodate long sampling times.
% s = serial('COM10','BaudRate',115200);  %change
% set(s,{'InputBufferSize','OutputBufferSize'},{numSamples*bytesPerSample,4});
% s.Timeout = 60; 
% 
% fopen(s);
% pause(2);
% fwrite(s,[numSamples,samplingFreq/2],'uint16');
% dat = fread(s,numSamples,'uint16');
% fclose(s);

% Some convenience code to begin converting data for you.
%micSignal = dat.*(3.3/1023); % convert from Teensy Units to Volts
samplingPeriod = 1/samplingFreq; % s
totalTime = numSamples*samplingPeriod; % s
t = linspace(0,totalTime,numSamples)'; % time vector of signal

exampleSignal = sin(9000*t) + sin(11000*t) + sin(13000*t);
% create a new variable for saving data
[FFT_example, f] = fdomain(exampleSignal, samplingFreq); 

% FFT Magnitudes
figure(1)
stem(f, abs(FFT_example))
grid on; box on;
ylabel("FFT magnitude")
xlabel("Frequency (Hz)")
title("EXAMPLE Magnitude FFT of 10 kS/s")

% Time Data
figure(2)
plot(t(1:100), exampleSignal(1:100), "LineWidth", 1)
grid on; box on;
ylabel("Voltage (V)")
xlabel("Time (s)")
title("EXAMPLE Time Data for 10 kS/s")

% Real Data

% % FFT Magnitudes
% [FFT_signal, f] = fdomain(micSignal, samplingFreq); 

% figure(1)
% stem(f, abs(FFT_signal))
% grid on; box on;
% ylabel("FFT magnitude")
% xlabel("Frequency (Hz)")
% title("Magnitude FFT of 10 kS/s")
% 
% % Time Data
% figure(2)
% plot(t(1:100), micSignal(1:100))
% grid on; box on;
% ylabel("Voltage (V)")
% xlabel("Time (s)")
% title("Time Data for 10 kS/s")




